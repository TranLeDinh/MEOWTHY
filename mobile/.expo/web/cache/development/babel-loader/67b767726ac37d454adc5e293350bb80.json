{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar TextButton = function TextButton(_ref) {\n  var size = _ref.size,\n      onPress = _ref.onPress,\n      textStyle = _ref.textStyle,\n      allowFontScaling = _ref.allowFontScaling,\n      style = _ref.style,\n      children = _ref.children;\n  return _jsx(View, {\n    style: _objectSpread({\n      flex: 0,\n      paddingHorizontal: 10\n    }, style),\n    children: _jsx(TouchableOpacity, {\n      style: {\n        flex: 0\n      },\n      onPress: onPress,\n      hitSlop: {\n        top: 15,\n        bottom: 15,\n        left: 15,\n        right: 15\n      },\n      children: _jsx(Text, {\n        allowFontScaling: allowFontScaling,\n        style: _objectSpread({\n          fontSize: size / 2.5\n        }, textStyle),\n        children: children\n      })\n    })\n  });\n};\n\nTextButton.propTypes = {\n  size: PropTypes.number.isRequired,\n  onPress: PropTypes.func.isRequired,\n  textStyle: PropTypes.shape({\n    style: PropTypes.any\n  }),\n  allowFontScaling: PropTypes.bool\n};\nTextButton.defaultProps = {\n  textStyle: null,\n  allowFontScaling: true\n};\nexport default TextButton;","map":{"version":3,"sources":["D:/Nam3/Semester2/5_Mobile/app/MEOWTHY/mobile/node_modules/react-native-onboarding-swiper/src/buttons/TextButton.js"],"names":["React","PropTypes","TextButton","size","onPress","textStyle","allowFontScaling","style","children","flex","paddingHorizontal","top","bottom","left","right","fontSize","propTypes","number","isRequired","func","shape","any","bool","defaultProps"],"mappings":";;;;;;;;;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;;AAEA,IAAMC,UAAU,GAAG,SAAbA,UAAa;AAAA,MAAGC,IAAH,QAAGA,IAAH;AAAA,MAASC,OAAT,QAASA,OAAT;AAAA,MAAkBC,SAAlB,QAAkBA,SAAlB;AAAA,MAA6BC,gBAA7B,QAA6BA,gBAA7B;AAAA,MAA+CC,KAA/C,QAA+CA,KAA/C;AAAA,MAAsDC,QAAtD,QAAsDA,QAAtD;AAAA,SACjB,KAAC,IAAD;AAAM,IAAA,KAAK;AAAIC,MAAAA,IAAI,EAAE,CAAV;AAAaC,MAAAA,iBAAiB,EAAE;AAAhC,OAAuCH,KAAvC,CAAX;AAAA,cACE,KAAC,gBAAD;AACE,MAAA,KAAK,EAAE;AAAEE,QAAAA,IAAI,EAAE;AAAR,OADT;AAEE,MAAA,OAAO,EAAEL,OAFX;AAGE,MAAA,OAAO,EAAE;AAAEO,QAAAA,GAAG,EAAE,EAAP;AAAWC,QAAAA,MAAM,EAAE,EAAnB;AAAuBC,QAAAA,IAAI,EAAE,EAA7B;AAAiCC,QAAAA,KAAK,EAAE;AAAxC,OAHX;AAAA,gBAKE,KAAC,IAAD;AAAM,QAAA,gBAAgB,EAAER,gBAAxB;AAA0C,QAAA,KAAK;AAAIS,UAAAA,QAAQ,EAAEZ,IAAI,GAAG;AAArB,WAA6BE,SAA7B,CAA/C;AAAA,kBAA0FG;AAA1F;AALF;AADF,IADiB;AAAA,CAAnB;;AAYAN,UAAU,CAACc,SAAX,GAAuB;AACrBb,EAAAA,IAAI,EAAEF,SAAS,CAACgB,MAAV,CAAiBC,UADF;AAErBd,EAAAA,OAAO,EAAEH,SAAS,CAACkB,IAAV,CAAeD,UAFH;AAGrBb,EAAAA,SAAS,EAAEJ,SAAS,CAACmB,KAAV,CAAgB;AACzBb,IAAAA,KAAK,EAAEN,SAAS,CAACoB;AADQ,GAAhB,CAHU;AAMrBf,EAAAA,gBAAgB,EAAEL,SAAS,CAACqB;AANP,CAAvB;AASApB,UAAU,CAACqB,YAAX,GAA0B;AACxBlB,EAAAA,SAAS,EAAE,IADa;AAExBC,EAAAA,gBAAgB,EAAE;AAFM,CAA1B;AAKA,eAAeJ,UAAf","sourcesContent":["import { View, TouchableOpacity, Text } from 'react-native';\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nconst TextButton = ({ size, onPress, textStyle, allowFontScaling, style, children }) => (\n  <View style={{ flex: 0, paddingHorizontal: 10, ...style }}>\n    <TouchableOpacity\n      style={{ flex: 0 }}\n      onPress={onPress}\n      hitSlop={{ top: 15, bottom: 15, left: 15, right: 15 }}\n    >\n      <Text allowFontScaling={allowFontScaling} style={{ fontSize: size / 2.5, ...textStyle }}>{children}</Text>\n    </TouchableOpacity>\n  </View>\n);\n\nTextButton.propTypes = {\n  size: PropTypes.number.isRequired,\n  onPress: PropTypes.func.isRequired,\n  textStyle: PropTypes.shape({\n    style: PropTypes.any,\n  }),\n  allowFontScaling: PropTypes.bool,\n};\n\nTextButton.defaultProps = {\n  textStyle: null,\n  allowFontScaling: true,\n};\n\nexport default TextButton;\n"]},"metadata":{},"sourceType":"module"}